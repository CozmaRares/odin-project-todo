@import url("https://fonts.googleapis.com/css2?family=Roboto&display=swap");

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

a {
  text-decoration: none;
  color: inherit;
}

ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

button,
input {
  border: none;
  outline: none;
  color: inherit;
  background-color: inherit;
  font-family: inherit;
  font-weight: inherit;
  font-size: inherit;
  line-height: inherit;
}

.full-bleed {
  box-shadow: 0 0 0 100vmax var(--bleed-background, transparent);
  clip-path: inset(0 -100vmax);
}

body {
  font-family: "Roboto", sans-serif;
  height: 100vh;
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-rows: auto 1fr;
}

header {
  --bleed-background: hsl(0, 0%, 10%);
  --text: white;
  --rounded: 1000px;

  background-color: var(--bleed-background);
  color: var(--text);
  width: fit-content;
  display: flex;
  align-items: center;
  padding: 1rem;
  padding-left: 2rem;
  grid-column: 1/ -1;
}

header > * {
  background-color: hsl(0, 0%, 30%);
  height: 100%;
  height: 2rem;
  border: 2px solid transparent;
}

header input {
  border-right: none;
  border-top-left-radius: var(--rounded);
  border-bottom-left-radius: var(--rounded);
  padding-left: 1em;
}

header input::placeholder {
  opacity: 0.75;
}

header label {
  border-left: none;
  display: flex;
  align-items: center;
  justify-content: center;
  border-top-right-radius: var(--rounded);
  border-bottom-right-radius: var(--rounded);
  cursor: pointer;
}

header input:focus,
header input:focus + label {
  border-color: var(--text);
  background-color: hsl(0, 0%, 20%);
}

header svg {
  height: 80%;
  margin: 0 0.5rem;
}

nav {
  background-color: hsl(0, 0%, 90%);
}

.sidebar {
  width: fit-content;
  padding: 2rem;
}

.sidebar li {
  --line-height: 1.2em;
  --svg-size: 24px;
  --flex-gap: 0.25rem;

  padding: 1rem 1rem 0.5rem;
  margin: 0.25rem 0;
  cursor: pointer;
  border-radius: 5px;
  line-height: var(--line-height);
}

.sidebar li:hover,
li.active {
  background-color: hsl(0, 0%, 80%);
}

li.project-list {
  text-transform: capitalize;
}

.sidebar li > :first-child {
  display: flex;
  align-items: center;
  gap: var(--flex-gap);
  flex-direction: row;
  margin-bottom: 0.5rem;
}

.projects {
  overflow-y: auto;
  max-height: 0;
  margin-left: calc(0.5rem + var(--svg-size) + var(--flex-gap));
  margin-right: 1rem;
  transition: max-height 300ms ease-in-out;
  scroll-snap-type: y mandatory;
}

li.active .projects {
  --rows: 5;

  max-height: calc(var(--line-height) * var(--rows));
}

.projects > * {
  scroll-snap-align: start;
}

.sidebar svg {
  width: var(--svg-size);
  height: var(--svg-size);
}

svg.inbox {
  color: salmon;
}

svg.done {
  color: limegreen;
}

svg.today {
  color: darkolivegreen;
}

svg.week {
  color: rebeccapurple;
}

svg.recurring {
  color: deepskyblue;
}

svg.priority {
  color: crimson;
}

svg.caret path {
  transition: d 300ms ease-in-out;
}

li.active svg.caret path {
  d: path("M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z");
}
